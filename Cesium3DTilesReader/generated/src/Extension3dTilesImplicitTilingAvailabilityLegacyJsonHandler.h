// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include <Cesium3DTiles/Extension3dTilesImplicitTilingAvailabilityLegacy.h>
#include <CesiumJsonReader/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonReader/IntegerJsonHandler.h>

namespace CesiumJsonReader {
class ExtensionReaderContext;
}

namespace Cesium3DTilesReader {
class Extension3dTilesImplicitTilingAvailabilityLegacyJsonHandler
    : public CesiumJsonReader::ExtensibleObjectJsonHandler {
public:
  using ValueType =
      Cesium3DTiles::Extension3dTilesImplicitTilingAvailabilityLegacy;

  Extension3dTilesImplicitTilingAvailabilityLegacyJsonHandler(
      const CesiumJsonReader::ExtensionReaderContext& context) noexcept;
  void reset(
      IJsonHandler* pParentHandler,
      Cesium3DTiles::Extension3dTilesImplicitTilingAvailabilityLegacy* pObject);

  virtual IJsonHandler* readObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* readObjectKeyExtension3dTilesImplicitTilingAvailabilityLegacy(
      const std::string& objectType,
      const std::string_view& str,
      Cesium3DTiles::Extension3dTilesImplicitTilingAvailabilityLegacy& o);

private:
  Cesium3DTiles::Extension3dTilesImplicitTilingAvailabilityLegacy* _pObject =
      nullptr;
  CesiumJsonReader::IntegerJsonHandler<int64_t> _bufferView;
  CesiumJsonReader::IntegerJsonHandler<int64_t> _availableCount;
  CesiumJsonReader::IntegerJsonHandler<int32_t> _constant;
};
} // namespace Cesium3DTilesReader
